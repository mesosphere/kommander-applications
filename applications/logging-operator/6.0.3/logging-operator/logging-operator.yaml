apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: logging-operator
  namespace: ${releaseNamespace}
spec:
  interval: 1m
  url: "oci://ghcr.io/kube-logging/helm-charts/logging-operator"
  ref:
    tag: 6.0.3
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: logging-operator
  namespace: ${releaseNamespace}
spec:
  chartRef:
    kind: OCIRepository
    name: logging-operator
    namespace: ${releaseNamespace}
  interval: 15s
  install:
    crds: CreateReplace
    remediation:
      retries: 30
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 30
  releaseName: logging-operator
  values:
    fluentbit:
      enabled: false
    fluentd:
      podPriorityClassName: "dkp-critical-priority"
      image:
        repository: ghcr.io/kube-logging/logging-operator/fluentd
        tag: 6.0.3-full
      resources:
        limits:
          memory: 400Mi
          cpu: 1000m
        requests:
          memory: 100Mi
          cpu: 500m
      scaling:
        replicas: 1
      port: 24240
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 24240
        timeoutSeconds: 3
      logLevel: warn
      fluentLogDestination: stdout
      bufferStorageVolume:
        pvc:
          source:
            claimName: fluentd-buffer
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            volumeMode: Filesystem
      metrics:
        port: 24231
        path: /metrics
        prometheusAnnotations: true
      bufferVolumeMetrics:
        port: 9200
        path: /metrics
        prometheusAnnotations: true
      statefulsetAnnotations:
        secret.reloader.stakater.com/reload: logging-operator-logging-fluentd-tls
    clusterFlows:
      - name: cluster-containers
        spec:
          globalOutputRefs:
            - loki
    clusterOutputs:
      - name: loki
        spec:
          loki:
            url: "http://grafana-loki-loki-distributed-gateway.${releaseNamespace}.svc.cluster.local:80"
            extract_kubernetes_labels: true
            configure_kubernetes_labels: true
            buffer:
              retry_forever: false
              retry_max_times: 5
              flush_mode: interval
              flush_interval: 10s
              flush_thread_count: 8
            extra_labels:
              log_source: kubernetes_container
    tls:
      enabled: true
