---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Chart.Name }}-installation
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Chart.Name }}-installation
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups:
      - dkp.d2iq.io
    resources:
      - kommandercores
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Chart.Name }}-installation
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Chart.Name }}-installation
subjects:
  - kind: ServiceAccount
    name: {{ .Chart.Name }}-installation
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-installation
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
data:
  install_crd.sh: |-
    #!/bin/bash
    set -eo pipefail


    cat <<EOF | kubectl apply --server-side -f -
    apiVersion: dkp.d2iq.io/v1alpha1
    kind: KommanderCore
    metadata:
      name: kommander-core
    spec: {}
    EOF
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Chart.Name }}-installation
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: {{ .Chart.Name }}-installation
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-installation
          image: "{{ .Values.kubetools.image.repository | default "mesosphere/kommander2-kubetools" }}:{{ .Values.kubetools.image.tag }}"
          command: ["/bin/bash","-c"]
          args: ["/bin/scripts/install_crd.sh"]
          volumeMounts:
            - name: kommandercore-creation-script
              mountPath: /bin/scripts
      volumes:
        - name: kommandercore-creation-script
          configMap:
            defaultMode: 0770
            name: {{ .Chart.Name }}-installation
      restartPolicy: OnFailure

---
