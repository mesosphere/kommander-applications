image:
  repository: kubernetesui/dashboard
  tag: v2.7.0
  pullPolicy: IfNotPresent
  pullSecrets: []


replicaCount: 1

commonLabels: {}

commonAnnotations: {}

annotations: {}

labels: {}

extraEnv: []

extraVolumes: []

extraVolumeMounts: []

extraManifests: []

securityContext:
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsUser: 1001
  runAsGroup: 2001

podLabels: {}
podAnnotations: {}

nodeSelector: {}

tolerations: []

affinity: {}

resources:
  requests:
    cpu: 100m
    memory: 200Mi
  limits:
    cpu: 2
    memory: 200Mi

protocolHttp: false

service:
  type: ClusterIP
  externalPort: 443

  annotations: {}

  labels: {}

  clusterServiceLabel:
    enabled: true
    key: "kubernetes.io/cluster-service"

ingress:
  enabled: false

  paths:
    - /
  customPaths: []

settings:
  {}

pinnedCRDs:
  []

metricsScraper:
  enabled: false
  image:
    repository: kubernetesui/metrics-scraper
    tag: v1.0.8
  resources: {}

metrics-server:
  enabled: false

rbac:
  create: true
  clusterRoleMetrics: true
  clusterReadOnlyRole: false

serviceAccount:
  create: true
  name:

livenessProbe:
  initialDelaySeconds: 30
  timeoutSeconds: 30

podDisruptionBudget:
  enabled: false
  minAvailable:
  maxUnavailable:


networkPolicy:
  enabled: false

podSecurityPolicy:
  enabled: false

serviceMonitor:
  enabled: false
  labels: {}
  annotations: {}