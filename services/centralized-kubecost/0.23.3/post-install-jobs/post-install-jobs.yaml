# Copy grafana-datasource cm after it has been created in the release.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubecost-configmap-edit
  namespace: kubecost
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubecost-configmap-edit
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubecost-configmap-edit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubecost-configmap-edit
subjects:
  - kind: ServiceAccount
    name: kubecost-configmap-edit
    namespace: kubecost
---
apiVersion: batch/v1
kind: Job
metadata:
  name: copy-kubecost-grafana-datasource-cm
  namespace: kubecost
spec:
  template:
    metadata:
      name: copy-kubecost-grafana-datasource-cm
    spec:
      serviceAccountName: kubecost-configmap-edit
      restartPolicy: OnFailure
      containers:
        - name: kubectl
          image: "${kubetoolsImageRepository:=bitnami/kubectl}:${kubetoolsImageTag:=1.23.5}"
          command:
            - sh
            - -c
            - |
              kubectl get configmap grafana-datasource --namespace=kubecost -o yaml | sed 's/namespace: kubecost/namespace: ${releaseNamespace}/' | sed 's/name: grafana-datasource/name: centralized-kubecost-grafana-datasource/' | grep -v '^\s*uid:\s' | grep -v '^\s*resourceVersion:\s' | kubectl apply -f -
