
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dex-k8s-authenticator-1.2.11-d2iq-defaults
  namespace: ${releaseNamespace}
data:
  values.yaml: |-
    ---
    image:
      repository: mesosphere/dex-k8s-authenticator
      tag: v1.2.4-d2iq
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: kommander-traefik
        traefik.ingress.kubernetes.io/router.tls: "true"
      path: /token
      hosts:
        - ""
    dexK8sAuthenticator:
      pluginVersion: "v0.1.3"
      useClusterHostnameForClusterName: true
      listen: http://0.0.0.0:5555
      web_path_prefix: /token
      # The placeholder for management cluster to get dex-k8s-authenticator
      # installed. This will be replaced by dex-k8s-authenticator controller.
      # Without the default cluster the application crashloops and prevents
      # kommander to complete the installation.
      clusters:
      - name: kubernetes-cluster
        short_description: "Kubernetes cluster"
        description: "Kubernetes cluster authenticator"
        # client_secret: value is generated automatically via initContainers
        client_id: kube-apiserver
        issuer: https://dex.${releaseNamespace}.svc.cluster.local:8080/dex
        # This URI is just a placeholder and it will be replaced during initContainers
        # with a URL pointing to the traefik ingress public load balancer.
        redirect_uri: https://dex-k8s-authenticator.${releaseNamespace}.svc.cluster.local:5555/token/callback/kubernetes-cluster
    deploymentAnnotations:
      configmap.reloader.stakater.com/reload: "dex-k8s-authenticator"
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    rbac:
      create: true
