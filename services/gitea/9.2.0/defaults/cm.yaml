apiVersion: v1
kind: ConfigMap
metadata:
  name: gitea-9.2.0-d2iq-defaults
  namespace: ${releaseNamespace}
data:
  values.yaml: |-
    ---
    priorityClassName: "dkp-critical-priority"
    image:
      rootless: true
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: kommander-traefik
        traefik.ingress.kubernetes.io/router.middlewares: kommander-stripprefixes@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
        - paths:
          - path: /dkp/kommander/git
            pathType: ImplementationSpecific
    gitea:
      additionalConfigFromEnvs:
        - name: GITEA__SERVER__SSL_MIN_VERSION
          value: tlsv1.3
        - name: GITEA__SERVER__SSL_MAX_VERSION
          value: tlsv1.3
      admin:
        existingSecret: ${adminCredentialsSecret}
      config:
        server:
          ROOT_URL: https://localhost/dkp/kommander/git
          PROTOCOL: https
          CERT_FILE: /git-tls/tls.crt
          KEY_FILE: /git-tls/tls.key
          HTTP_PORT: 3000
        service:
          REQUIRE_SIGNIN_VIEW: false
          DISABLE_REGISTRATION: true
        session:
          PROVIDER: redis
          PROVIDER_CONFIG: redis+cluster://:gitea@gitea-redis-cluster-headless.${releaseNamespace}.svc.cluster.local:6379/0?pool_size=100&idle_timeout=180s&
        cache:
          ENABLED: true
          ADAPTER: redis
          HOST: redis+cluster://:gitea@gitea-redis-cluster-headless.${releaseNamespace}.svc.cluster.local:6379/0?pool_size=100&idle_timeout=180s&
        queue:
          TYPE: redis
          CONN_STR: redis+cluster://:gitea@gitea-redis-cluster-headless.${releaseNamespace}v.svc.cluster.local:6379/0?pool_size=100&idle_timeout=180s&

      startupProbe:
        enabled: true
        tcpSocket:
          port: http
        initialDelaySeconds: 60
        timeoutSeconds: 1
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 10
    deployment:
      annotations:
        secret.reloader.stakater.com/reload: ${tlsCertificateSecret}
    service:
      http:
        port: 443
        clusterIP:
    extraVolumes:
    - name: git-tls
      secret:
        secretName: ${tlsCertificateSecret}
    extraVolumeMounts:
    - name: git-tls
      readOnly: true
      mountPath: "/git-tls"
    clusterDomain: cluster.local.
    redis-cluster:
      priorityClassName: "dkp-critical-priority"
    postgresql-ha:
      enabled: false
    postgresql:
      enabled: true
      primary:
        priorityClassName: "dkp-critical-priority"
