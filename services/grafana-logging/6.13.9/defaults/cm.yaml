
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-logging-6.13.9-d2iq-defaults
  namespace: ${releaseNamespace}
data:
  values.yaml: |
    ---
    image:
      # Overriding version to pull in a fix for a CVE.
      # See <https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-43798>.
      tag: 8.2.7

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          url: "http://grafana-loki-loki-distributed-gateway"
          access: proxy
          isDefault: false
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: kommander-traefik
        ingress.kubernetes.io/auth-response-headers: X-Forwarded-User
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.middlewares: "${workspaceNamespace}-stripprefixes@kubernetescrd,${workspaceNamespace}-forwardauth@kubernetescrd"
      hosts: [""]
      path: /dkp/logging/grafana
      pathType: ImplementationSpecific

    sidecar:
      dashboards:
        enabled: true
        label: grafana_logging_dashboard
        searchNamespace: ALL

    grafana.ini:
      server:
        protocol: http
        enable_gzip: true
        root_url: "%(protocol)s://%(domain)s:%(http_port)s/dkp/logging/grafana"
        serve_from_sub_path: true
      auth.proxy:
        enabled: true
        header_name: X-Forwarded-User
        auto-sign-up: true
      auth.basic:
        enabled: false
      users:
        auto_assign_org_role: Admin

    service:
      type: ClusterIP
      port: 3000

    resources:
      # keep request = limit to keep this container in guaranteed class
      limits:
        cpu: 300m
        memory: 100Mi
      requests:
        cpu: 200m
        memory: 100Mi

    readinessProbe:
      httpGet:
        path: /api/health
        port: 3000
        scheme: HTTP
    livenessProbe:
      httpGet:
        path: /api/health
        port: 3000
        scheme: HTTP
      initialDelaySeconds: 60
      timeoutSeconds: 30
      failureThreshold: 10
    rbac:
      pspUseAppArmor: false
      pspEnabled: false
    # to avoid needing to download any plugins at runtime, use a container and a shared volume
    # do not enable the plugins here, instead rebuild the mesosphere/grafana-plugins image with the new plugins
    plugins: []
    #  - grafana-piechart-panel
    extraEmptyDirMounts:
      - name: plugins
        mountPath: /var/lib/grafana/plugins/
    extraInitContainers:
      - name: grafana-plugins-install
        image: mesosphere/grafana-plugins:v0.0.1
        command: ["/bin/sh", "-c", "cp -a /var/lib/grafana/plugins/. /var/lib/grafana/shared-plugins/"]
        volumeMounts:
        - name: plugins
          mountPath: /var/lib/grafana/shared-plugins/
