---
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: grafana-loki-minio
  namespace: ${releaseNamespace}
  labels:
    app: grafana-loki-minio
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
spec:
  image: minio/minio:RELEASE.2022-02-24T22-12-01Z
  pools:
    - servers: 4
      volumesPerServer: 1
      volumeClaimTemplate:
        metadata:
          name: grafana-loki-minio
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
      resources:
        limits:
          cpu: 750m
          memory: 768Mi
        requests:
          cpu: 250m
          memory: 384Mi

  credsSecret:
    name: grafana-loki-minio-root

  users:
    - name: grafana-loki-minio-user

  # Disable TLS.
  requestAutoCert: false

  # Create services as type ClusterIP, not LoadBalancer.
  exposeServices:
    minio: false
    console: false

  env:
    # Allow unathenticated requests to metrics endpoint.
    - name: MINIO_PROMETHEUS_AUTH_TYPE
      value: public

  s3:
    bucketDNS: false

  podManagementPolicy: Parallel
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-loki-minio-root
  namespace: ${releaseNamespace}
type: Opaque
data:
  # Root access key for MinIO Tenant, base64 encoded (echo -n 'minio' | base64)
  accesskey: bWluaW8=
  # Root secret key for MinIO Tenant, base64 encoded (echo -n 'minio123' | base64)
  secretkey: bWluaW8xMjM=
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-loki-minio-user
  namespace: ${releaseNamespace}
type: Opaque
data:
  # User access key for MinIO Tenant, base64 encoded (echo -n 'minio-user' | base64)
  CONSOLE_ACCESS_KEY: bWluaW8tdXNlcg==
  # User secret key for MinIO Tenant, base64 encoded (echo -n 'minio123' | base64)
  CONSOLE_SECRET_KEY: bWluaW8xMjM=
