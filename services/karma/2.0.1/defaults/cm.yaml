---
apiVersion: v1
kind: ConfigMap
metadata:
  name: karma-2.0.1-d2iq-defaults
  namespace: ${releaseNamespace}
data:
  values.yaml: |
    ---
    image:
      # TODO(https://jira.d2iq.com/browse/D2IQ-78091)
      # switch back to upstream
      repository: mesosphere/karma
      tag: v0.88-d2iq-server-name

    service:
      labels:
        servicemonitor.kommander.mesosphere.io/path: "dkp__kommander__monitoring__karma__metrics"

    deployment:
      annotations:
        configmap.reloader.stakater.com/reload: karma-config
        secret.reloader.stakater.com/reload: kommander-karma-client-tls

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: kommander-traefik
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.middlewares: "${workspaceNamespace}-stripprefixes@kubernetescrd,${workspaceNamespace}-forwardauth@kubernetescrd"
      path: "/dkp/kommander/monitoring/karma"
      hosts:
        - ""

    readinessProbe:
      delay: 5
      period: 5
      path: /dkp/kommander/monitoring/karma/

    configMap:
      enabled: true
      annotations:
        helm.sh/hook: pre-install
        helm.sh/hook-delete-policy: before-hook-creation
      rawConfig:
        alertmanager:
          interval: 30s
          servers:
            # Karma won't start without at least one configured alertmanager. We include a placeholder so that Karma will
            # successfully start. The placeholder URI's hostname should not resolve. This placeholder will be removed
            # once the corresponding controller discovers a managed cluster and updates this configuration with its
            # alertmanager.
            - name: placeholder
              uri: https://placeholder.invalid
        annotations:
          default:
            hidden: false
          hidden:
            - help
          visible: []
        filters:
          default: []
        labels:
          color:
            static:
              - job
            unique:
              - cluster
              - instance
              - "@receiver"
          keep: []
          strip: []
        listen:
          address: "0.0.0.0"
          port: 8080
          prefix: /dkp/kommander/monitoring/karma/
        log:
          config: true
          level: info

    certSecretNames:
      - kommander-karma-client-tls
