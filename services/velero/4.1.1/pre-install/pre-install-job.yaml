apiVersion: v1
kind: ServiceAccount
metadata:
  name: velero-pre-install
  namespace: ${releaseNamespace}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: velero-pre-install
  namespace: ${releaseNamespace}
rules:
  - apiGroups: ["kustomize.toolkit.fluxcd.io"]
    resources: ["kustomizations"]
    verbs: ["get", "patch"]
  - apiGroups: ["ceph.rook.io"]
    resources: ["cephclusters"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: velero-pre-install
  namespace: ${releaseNamespace}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: velero-pre-install
subjects:
  - kind: ServiceAccount
    name: velero-pre-install
    namespace: ${releaseNamespace}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: velero-pre-install
  namespace: ${releaseNamespace}
spec:
  template:
    metadata:
      name: velero-pre-install
    spec:
      serviceAccountName: velero-pre-install
      restartPolicy: OnFailure
      priorityClassName: dkp-critical-priority
      containers:
        - name: pre-install
          image: ${kubetoolsImageRepository}:${kubetoolsImageTag}
          command:
            - sh
            - -c
            - |
              timeout 1h /bin/bash <<'EOF' || true
              # If the rook-ceph-cluster kustomization doesn't exist, we do not need to wait for the CephCluster.
              # Otherwise, if the kustomization does exist, we can assume we need to wait for the CephCluster
              # (there's no harm in waiting even if Velero is configured to use another storage backend.
              echo "Waiting up to 5 mins for the rook-ceph-cluster kustomization to exist..."
              timeout 5m /bin/bash <<'END'
                while true; do
                  kubectl get kustomization -n ${releaseNamespace} rook-ceph-cluster
                  if [[ $? -eq 0 ]]; then
                     break
                  fi
                  echo "rook-ceph-cluster Kustomization does not exist yet, retrying after 10s..."
                  sleep 10
                done
              END

              if [[ $? -ne 0 ]]; then
                echo "rook-ceph-cluster Kustomization does not exist, exiting"
                exit 0
              fi

              echo "Waiting for CephCluster to exist..."
              while true; do
                ceph_cluster_name=$(kubectl get CephCluster -l helm.toolkit.fluxcd.io/name=rook-ceph-cluster -n ${releaseNamespace} -oname)
                if [[ $ceph_cluster_name != "" ]]; then
                  break
                fi
                echo "CephCluster doesn't exist yet, retrying after 10s..."
                sleep 10
              done
              echo "CephCluster found: $ceph_cluster_name"
              echo "Waiting for the $ceph_cluster_name CephCluster to be ready..."
              kubectl wait --for=condition=Ready $ceph_cluster_name -n ${releaseNamespace} --timeout=1h

              echo "Waiting for the $ceph_cluster_name capacity to be updated..."
              while true; do
                ceph_cluster_capacity=$(kubectl get -ojsonpath='{.status.ceph.capacity.lastUpdated}' $ceph_cluster_name -n ${releaseNamespace})
                if [[ $ceph_cluster_capacity != "" ]]; then
                  break
                fi
                echo "The CephCluster '.status.ceph.capacity.lastUpdated' field is not populated yet, retrying after 10s..."
                sleep 10
              done
              EOF
