apiVersion: v1
kind: ConfigMap
metadata:
  name: velero-4.1.1-d2iq-defaults
  namespace: ${releaseNamespace}
data:
  values.yaml: |
    ---
    priorityClassName: "dkp-critical-priority"
    resources:
      # these are from the chart defaults
      # except memory limit, which the default 512Mi can be short when it's during a restoration run
      requests:
        cpu: 500m
        memory: 128Mi
      limits:
        cpu: 1000m
        memory: 2Gi
    configuration:
      backupStorageLocation:
        - bucket: dkp-velero
          provider: "aws"
          config:
            region: dkp-object-store
            # this s3Url default value is overwritten by kubeaddons-addon-initializer unless set to something different
            s3Url: http://rook-ceph-rgw-dkp-object-store.${releaseNamespace}.svc:80/
            s3ForcePathStyle: true
            insecureSkipTLSVerify: "true"
      volumeSnapshotLocation:
        - config:
            region: "fallback"
          provider: "aws"
    credentials:
      # This is created by rook-ceph-cluster service. A ConfigMap and a Secret with same name as bucket are created.
      extraSecretRef: dkp-velero
    annotations:
      secret.reloader.stakater.com/reload: dkp-velero
    schedules:
      default:
        schedule: "0 0 * * *"
        template:
          ttl: 720h # 30 day retention, required to create schedule
    metrics:
      enabled: true
      service:
        labels:
          servicemonitor.kommander.mesosphere.io/path: "metrics"
    initContainers:
      - name: velero-plugin-for-aws
        image: velero/velero-plugin-for-aws:v1.7.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins
    kubectl:
      image:
        # If we don't override the version here, upstream chart will pull an image dynamically based on k8s cluster version.
        # which makes it harder to build airgapped tar bundles. So to make bundle collection predictable, we override the tag here.
        tag: 1.27.9
